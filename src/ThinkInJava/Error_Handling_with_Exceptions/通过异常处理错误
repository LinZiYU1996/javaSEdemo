


发现错误的理想时机是在编译阶段，也就是在你试图运行程序之前。
然而，编译期间并不 能找出所有的错误，余下的问题必须在运行期间解决。
 这就需要错误源能通过某种方式，
把适当的信息传递给某个接收者一－该接收者将知道如何正确处理这个问题。
改进的错误恢复机制是提供代码健壮性的最强有力的方式。
错误恢复在我们所编写的每一 个程序中都是基本的要素，但是在Java中它显得格外重要，
因为Java的主要目标之一就是创建供他人使用的程序构件。要想创建健壮的系统，
它的每一个构件都必须是健壮的。Java使用异常来提供一致的错误报告模型，
使得构件能够与客户端代码可靠地沟通问题。
Java中的异常处理的目的在千通过使用少千目前数批的代码来简化大型、
可靠的程序的生成，并且通过 这种方式可以使你更加自信：你的应用中没有未处理的错误。
异常的相关知识学起来并非艰涩难懂，并且它属千那种可以使你的项目受益明显、 立竿见影的特性之一





























































