

synchronized能够实现：
原子性（同步）
可见性


JMM关于synchronized的两条规定：

线程解锁前，必须把共享变量的最新值刷新到主内存中。


线程加锁时，将清空工作内存中共享变量的值,从而使用共享变量时需要从主内存中重新读取最新的值（注意：加锁与解锁需要的是同一把锁）


这两点结合起来，就可以保证线程解锁前对共享变量的修改在下次加锁时对其他的线程可见，也就保证了线程之间共享变量的可见性。

线程执行互斥代码的过程：


获得互斥锁
清空工作内存
从主内存拷贝最新副本到工作内存中。
执行代码
将更改过后的共享变量的值刷新到主内存中去。
释放互斥锁。

