
根据语法规则，以下哪个不是有效的Lambda表达式？

(1) () -> {}
(2) () -> "Raoul"
(3) () -> {return "Mario";}
(4) (Integer i) -> return "Alan" + i;
(5) (String s) -> {"IronMan";}
答案：只有4和5是无效的Lambda。
(1) 这个Lambda没有参数，并返回void。它类似于主体为空的方法：public void run() {}。
(2) 这个Lambda没有参数，并返回String作为表达式。
(3) 这个Lambda没有参数，并返回String（利用显式返回语句）
(4) return是一个控制流语句。要使此Lambda有效，需要使花括号，如下所示：
(Integer i) -> {return "Alan" + i;}。
(5)“Iron Man”是一个表达式，不是一个语句。要使此Lambda有效，你可以去除花括号
和分号，如下所示：(String s) -> "Iron Man"。或者如果你喜欢，可以使用显式返回语
句，如下所示：(String s)->{return "IronMan";}



布尔表达式               (List<String> list) -> list.isEmpty()


创建对象                () -> new Apple(10)


消费一个对象                      (Apple a) -> {System.out.println(a.getWeight());}



从一个对象中选择/抽取                 (String s) -> s.length()


组合两个值                    (int a, int b) -> a * b


比较两个对象               (Apple a1, Apple a2) ->a1.getWeight().compareTo(a2.getWeight())





























