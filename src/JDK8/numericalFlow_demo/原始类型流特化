

Java 8引入了三个原始类型特化流接口来解决这个问题：IntStream、DoubleStream和
LongStream，分别将流中的元素特化为int、long和double，从而避免了暗含的装箱成本。每
个接口都带来了进行常用数值归约的新方法，比如对数值流求和的sum，找到最大元素的max。
此外还有在必要时再把它们转换回对象流的方法。要记住的是，这些特化的原因并不在于流的复
杂性，而是装箱造成的复杂性——即类似int和Integer之间的效率差异。


